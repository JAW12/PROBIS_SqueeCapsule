-- ============================ OPSIONAL ========================================

-- LOGIN USER
disc
conn proyekbisnis1/proyekbisnis1;

-- RESET TABLE
SELECT 'DROP TABLE ' || TNAME || ' CASCADE CONSTRAINT PURGE;' FROM TAB;

DROP TABLE D_BOOKING_FASILITAS CASCADE CONSTRAINT PURGE;
DROP TABLE D_BOOKING_KAMAR CASCADE CONSTRAINT PURGE;
DROP TABLE FASILITAS CASCADE CONSTRAINT PURGE;
DROP TABLE H_BOOKING CASCADE CONSTRAINT PURGE;
DROP TABLE KAMAR CASCADE CONSTRAINT PURGE;
DROP TABLE TAMU CASCADE CONSTRAINT PURGE;
DROP VIEW V_DATA_PEMINJAMAN_FASILITAS;
DROP VIEW V_DATA_PENGINAPAN;
DROP VIEW V_DETAIL_BOOKING_KAMAR;
DROP VIEW V_DETAIL_FASILITAS_KAMAR;


-- ============================ !! WAJIB !! ========================================

-- ALTER SESSION BIAR TIPE DATA DATE BISA MUNCULIN TIME JUGA
alter session set nls_date_format = 'dd/MM/yyyy hh24:mi:ss';

-- DML TABLE

/* == KAMAR ==

JENIS_KAMAR
- 0 = single
- 1 = family

STATUS_TERSEDIA
- 0 = tidak tersedia
- 1 = tersedia
*/
CREATE TABLE KAMAR(
    ROW_ID_KAMAR INT PRIMARY KEY,
    NOMOR_KAMAR VARCHAR2(10) UNIQUE NOT NULL,
    JENIS_KAMAR INT CONSTRAINT CH_JENIS_KAMAR CHECK(JENIS_KAMAR = 0 OR JENIS_KAMAR = 1),
    HARGA_KAMAR INT NOT NULL,
    STATUS_TERSEDIA INT CONSTRAINT CH_KAMAR_STATUS_TERSEDIA CHECK(STATUS_TERSEDIA = 0 OR STATUS_TERSEDIA = 1)
);

CREATE TABLE FASILITAS(
    ROW_ID_FASILITAS INT PRIMARY KEY,
    NAMA_FASILITAS VARCHAR2(50) NOT NULL,
    JUMLAH_TERSEDIA INT NOT NULL,
    BIAYA_PEMINJAMAN INT NOT NULL
);

CREATE TABLE TAMU(
    ROW_ID_TAMU INT PRIMARY KEY,
    NAMA_TAMU VARCHAR2(50) NOT NULL,
    NOMOR_TELEPON VARCHAR2(12) NOT NULL,
    EMAIL VARCHAR2(320) NOT NULL
);


/* == H_BOOKING ==
INSERT_AT = akan terisi secara otomatis dengan CURRENT_TIMESTAMP
*/
CREATE TABLE H_BOOKING(
    ROW_ID_BOOKING INT PRIMARY KEY,
    ROW_ID_TAMU INT CONSTRAINT FK_H_BOOKING_TAMU REFERENCES TAMU(ROW_ID_TAMU),
    JUMLAH_KAMAR_SINGLE INT,
    JUMLAH_KAMAR_FAMILY INT,
    INSERT_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    TANGGAL_CHECK_IN DATE,
    TANGGAL_CHECK_OUT DATE,
    STATUS_BOOKING INT NOT NULL,
    SUBTOTAL INT,
    BIAYA_TAMBAHAN INT,
    KETERANGAN VARCHAR2(300),
    TOTAL_HARGA INT,
    KODE_BOOKING VARCHAR2(30)
);

CREATE TABLE D_BOOKING_FASILITAS(
    ROW_ID_BOOKING INT REFERENCES H_BOOKING(ROW_ID_BOOKING),
    ROW_ID_FASILITAS INT REFERENCES FASILITAS(ROW_ID_FASILITAS),
    ROW_ID_KAMAR INT REFERENCES KAMAR(ROW_ID_KAMAR),
    JUMLAH_PEMINJAMAN INT,
    BIAYA_PEMINJAMAN INT,
    SUBTOTAL INT,
    CONSTRAINT PK_D_BOOKING_FASILITAS PRIMARY KEY(ROW_ID_BOOKING, ROW_ID_FASILITAS, ROW_ID_KAMAR)
);

CREATE TABLE D_BOOKING_KAMAR(
    ROW_ID_BOOKING INT REFERENCES H_BOOKING(ROW_ID_BOOKING),
    ROW_ID_KAMAR INT REFERENCES KAMAR(ROW_ID_KAMAR),
    CONSTRAINT PK_D_BOOKING_KAMAR PRIMARY KEY(ROW_ID_BOOKING, ROW_ID_KAMAR)
);



-- AUTO INCREMENT ROW ID : harus manual. oracle ga secanggih mysql. so sed :(

-- reset
DROP SEQUENCE KAMAR_SEQ;
DROP SEQUENCE FASILITAS_SEQ;
DROP SEQUENCE TAMU_SEQ;
DROP SEQUENCE H_BOOKING_SEQ;

-- create
CREATE SEQUENCE KAMAR_SEQ START WITH 1;
CREATE SEQUENCE FASILITAS_SEQ START WITH 1;
CREATE SEQUENCE TAMU_SEQ START WITH 1;
CREATE SEQUENCE H_BOOKING_SEQ START WITH 1;

-- trigger auto increment
CREATE OR REPLACE TRIGGER KAMAR_AUTOINCREMENT
BEFORE INSERT ON KAMAR
FOR EACH ROW
BEGIN
    SELECT KAMAR_SEQ.NEXTVAL
    INTO   :NEW.ROW_ID_KAMAR
    FROM   DUAL;
END;
/

CREATE OR REPLACE TRIGGER FASILITAS_AUTOINCREMENT
BEFORE INSERT ON FASILITAS
FOR EACH ROW
BEGIN
    SELECT FASILITAS_SEQ.NEXTVAL
    INTO   :NEW.ROW_ID_FASILITAS
    FROM   DUAL;
END;
/

CREATE OR REPLACE TRIGGER TAMU_AUTOINCREMENT
BEFORE INSERT ON TAMU
FOR EACH ROW
BEGIN
    SELECT TAMU_SEQ.NEXTVAL
    INTO   :NEW.ROW_ID_TAMU
    FROM   DUAL;
END;
/

CREATE OR REPLACE TRIGGER H_BOOKING_AUTOINCREMENT
BEFORE INSERT ON H_BOOKING
FOR EACH ROW
BEGIN
    SELECT H_BOOKING_SEQ.NEXTVAL
    INTO   :NEW.ROW_ID_BOOKING
    FROM   DUAL;
END;
/

CREATE OR REPLACE TRIGGER H_BOOKING_KODE 
BEFORE INSERT ON H_BOOKING
FOR EACH ROW
DECLARE
	TANGGAL DATE;
	TEMP VARCHAR2(100);
	TEMP3 NUMBER;
	TEMP4 VARCHAR2(100);
BEGIN
    TEMP3 := 0;
    SELECT SYSDATE INTO TANGGAL FROM DUAL;
    TEMP := 'B' || TO_CHAR(TANGGAL,'yyyyMMdd');
    FOR I IN (
		SELECT * FROM H_BOOKING where TO_CHAR(INSERT_AT,'dd-MON-yy') = to_char(sysdate,'dd-MON-yy')
	) LOOP
		TEMP3:= TEMP3 + 1;
	END LOOP;
	TEMP3:= TEMP3 + 1;
    IF TEMP3 < 10 THEN
		TEMP4:= '00' || TEMP3;
	else 
		TEMP4:= '0' || TEMP3;
	end if;
	TEMP := TEMP || TEMP4;
    :NEW.KODE_BOOKING := TEMP;
END;
/

-- views
CREATE OR REPLACE VIEW V_DETAIL_BOOKING_KAMAR AS
    SELECT 
        DBK.ROW_ID_BOOKING,
        K.ROW_ID_KAMAR,
        K.NOMOR_KAMAR AS NOMOR_KAMAR,
        CASE K.JENIS_KAMAR
            WHEN 0 THEN 'Single'
            WHEN 1 THEN 'Family'
        END AS JENIS_KAMAR,
        K.HARGA_KAMAR,
        NVL(SUM(DBF.SUBTOTAL), 0) AS SUBTOTAL
    FROM
        D_BOOKING_KAMAR DBK
    INNER JOIN KAMAR K 
    ON 
        K.ROW_ID_KAMAR = DBK.ROW_ID_KAMAR
    LEFT JOIN 
        D_BOOKING_FASILITAS DBF
    ON        
        DBF.ROW_ID_BOOKING = DBK.ROW_ID_BOOKING AND 
        DBF.ROW_ID_KAMAR = K.ROW_ID_KAMAR
    GROUP BY
        DBK.ROW_ID_BOOKING,
        K.ROW_ID_KAMAR,
        K.NOMOR_KAMAR,
        K.JENIS_KAMAR,
        K.HARGA_KAMAR
    ORDER BY ROW_ID_BOOKING ASC, K.NOMOR_KAMAR ASC;


CREATE OR REPLACE VIEW V_DETAIL_FASILITAS_KAMAR AS
    SELECT 
        DBF.ROW_ID_BOOKING,
        HB.STATUS_BOOKING,
        T.NAMA_TAMU,
        K.NOMOR_KAMAR,
        F.NAMA_FASILITAS,
        F.JUMLAH_TERSEDIA,
        F.ROW_ID_FASILITAS,
        DBF.JUMLAH_PEMINJAMAN,
        DBF.BIAYA_PEMINJAMAN,
        DBF.SUBTOTAL
    FROM 
        FASILITAS F, KAMAR K, D_BOOKING_FASILITAS DBF, TAMU T, H_BOOKING HB
    WHERE 
        F.ROW_ID_FASILITAS = DBF.ROW_ID_FASILITAS AND 
        DBF.ROW_ID_KAMAR = K.ROW_ID_KAMAR AND
        HB.ROW_ID_BOOKING = DBF.ROW_ID_BOOKING AND
        HB.ROW_ID_TAMU = T.ROW_ID_TAMU
    ORDER BY F.NAMA_FASILITAS ASC;


CREATE OR REPLACE VIEW V_DATA_PENGINAPAN AS
    SELECT V.*, T.NAMA_TAMU, T.ROW_ID_TAMU, HB.STATUS_BOOKING
    FROM V_DETAIL_BOOKING_KAMAR V, TAMU T, H_BOOKING HB
    WHERE HB.ROW_ID_BOOKING = V.ROW_ID_BOOKING AND HB.ROW_ID_TAMU = T.ROW_ID_TAMU;


-- buat data peminjaman per kamar di input peminjaman fasilitas -> jadinya ga dipake. lgsg select join di vs code. cm ini kl dibuang sayang
-- CREATE OR REPLACE VIEW V_DATA_PEMINJAMAN_FASILITAS AS
--     SELECT 
--         F.ROW_ID_FASILITAS,
--         F.NAMA_FASILITAS AS "Nama Fasilitas",
--         F.JUMLAH_TERSEDIA AS "Jumlah Tersedia",
--         F.BIAYA_PEMINJAMAN AS "Biaya",
--         NVL(SUM(V.JUMLAH_PEMINJAMAN), 0) AS "Jumlah Sudah Dipinjam",
--         F.BIAYA_PEMINJAMAN * NVL(V.JUMLAH_PEMINJAMAN, 0) AS "Subtotal"
--     FROM FASILITAS F
--     LEFT JOIN 
--         V_DETAIL_FASILITAS_KAMAR V
--     ON 
--         V.ROW_ID_FASILITAS = F.ROW_ID_FASILITAS AND NOMOR_KAMAR = 101
--     GROUP BY
--         V.ROW_ID_BOOKING,
--         V.STATUS_BOOKING,
--         V.NOMOR_KAMAR,
--         F.NAMA_FASILITAS,
--         F.BIAYA_PEMINJAMAN,
--         F.JUMLAH_TERSEDIA,
--         F.ROW_ID_FASILITAS,
--         V.JUMLAH_PEMINJAMAN
--     ORDER BY F.NAMA_FASILITAS ASC;

COMMIT;

